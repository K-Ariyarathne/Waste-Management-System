<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Waste Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }
        header {
            background-color: #4CAF50;
            color: #fff;
            text-align: center;
            padding: 1rem;
            width: 100%;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
        }
        header h1 {
            margin: 0;
        }
        nav {
            background-color: #333;
            padding-top: 60px; /* Offset by header height */
            width: 200px;
            height: 100%;
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            z-index: 900;
        }
        nav button {
            width: 100%;
            padding: 10px;
            border: none;
            background: none;
            color: #fff;
            text-align: left;
            border-bottom: 1px solid #444;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
        }
        nav button i {
            margin-right: 10px;
        }
        nav button:hover {
            background-color: #575757;
        }
        .content {
            margin-top: 60px; /* Offset by header height */
            margin-left: 200px; /* Same as nav width */
            padding: 20px;
        }
        .content-section {
            display: none;
            padding: 10px;
            background: #fff;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            margin-bottom: 10px;
        }
        .active-content {
            display: block;
        }
        .bins-container {
            display: flex;
            justify-content: center;
            width: 100%;
            margin-top: 20px; /* Adjusted to account for header height */
        }
        .bin-container {
            text-align: center;
            margin: 0 20px;
        }
        .bin-level {
            width: 150px;
            height: 300px;
            background-color: #e0e0e0;
            margin: 10px auto;
            position: relative;
            border: 3px solid #333;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .bin-fill {
            background-color: #4caf50;
            width: 100%;
            position: absolute;
            bottom: 0;
            border-bottom-left-radius: 7px;
            border-bottom-right-radius: 7px;
            transition: height 0.5s ease-in-out;
        }
        .bin-label {
            margin-top: 10px;
        }
        #notifications {
    background-color: #fff;
    border-left: 1px solid #ccc;
    padding: 10px;
    position: fixed; /* Change from absolute to fixed */
    top: 60px; /* Offset by header height */
    right: 0;
    width: 250px;
    height: calc(100% - 60px);
    box-shadow: -2px 0 5px rgba(0,0,0,0.1);
    overflow-y: auto;
    z-index: 1000; /* Ensure it's below the footer */
}
        .notification {
            background-color: #f44336;
            color: white;
            padding: 10px;
            margin-bottom: 5px;
            border-radius: 5px;
        }
        header img {
    float: left;
}

header h1 {
    margin-left: 20px; /* Adjust as needed */
    line-height: 50px; /* Adjust to match the height of your logo for vertical alignment */
}
footer {
    background-color: #180505e9;
    color: #fff;
    text-align: center;
    padding: 10px;
    position: fixed; /* Change from absolute to fixed */
    bottom: 0;
    width: 100%;
    height: 30px;
    z-index: 1100; /* Set z-index higher than the notification bar */
}
    </style>
</head>
<body>
    <header>
        <img src="pic/Abstract Human Tech Ai Company Free Logo (1).png" alt="Company Logo" width="100" height="100">
        <h1>Waste Management System</h1>
    </header>
    <nav><br><br><br><br>
        <button onclick="switchContent('home')"><i class="fas fa-home"></i>Home</button>
        <button onclick="switchContent('history')"><i class="fas fa-history"></i>History</button>
        <button onclick="switchContent('trash-level-records')"><i class="fas fa-chart-bar"></i>Trash Level Records</button>
        <button onclick="switchContent('contact-details')"><i class="fas fa-address-book"></i>Contact Details</button>
    </nav>
    <main class="content">
        <section id="home" class="content-section active-content">
            <h2><br><br>Home</h2>
            <div class="bins-container">
                <div class="bin-container">
                    <div id="bin1" class="bin-level">
                        <div class="bin-fill" style="height: 0%;"></div>
                    </div>
                    <div class="bin-label">Recycle Bin 1</div>
                </div>
                <div class="bin-container">
                    <div id="bin2" class="bin-level">
                        <div class="bin-fill" style="height: 0%;"></div>
                    </div>
                    <div class="bin-label">Recycle Bin 2</div>
                </div>
            </div>
        </section>
        <section id="history" class="content-section">
            <h2><br><br>History</h2>
            <div id="binHistory">
                <!-- Bin history will be displayed here -->
            </div>
        </section>        
        <section id="trash-level-records" class="content-section">
            <h2><br><br>Trash Level Records</h2>
            <p>This section will contain records of the trash levels over time. Data can be presented in a table or graph format.</p>
            <!-- You can insert a table or a chart here -->
        </section>
        <section id="contact-details" class="content-section">
            <h2><br><br>Contact Details</h2>
            <p>For service requests or more information, please contact us:</p>
            <address>
                <strong>Brain Tech Solutions Inc.</strong><br>
                Kandy Innovation Center<br>
                Kandy, Sri Lanka.<br>
                <abbr title="Phone">Phone Num :</abbr>  +94786822133<br>
                <abbr title="Email">Email :</abbr> <a href="mailto:support@adkalubowila@gmail.com">adkalubowila@gmail.com</a>
            </address>
        </section>
    </main>
<div>
    <footer>
        <p>&copy; 2024 Grandview Hotel. All rights reserved.</p>
    </footer>
    <div id="notifications">
        <!-- Notifications will be dynamically inserted here -->
    </div>
</div>
    <script>
        function switchContent(sectionId) {
            const sections = document.querySelectorAll('.content-section');
            sections.forEach(section => {
                section.classList.remove('active-content');
            });
            const activeSection = document.getElementById(sectionId);
            activeSection.classList.add('active-content');
        }

        // Function to simulate fetching bin data
        function fetchBinData() {
            return [Math.random() * 100, Math.random() * 100];
        }

        // Function to add a notification
        function addNotification(binId, message) {
            const notificationsContainer = document.getElementById('notifications');
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.id = 'notification-' + binId; // Assign an ID to the notification for later reference
            notification.innerText = message;
            notificationsContainer.appendChild(notification);
        }

        // Function to remove a notification
        function removeNotification(binId) {
            const notificationToRemove = document.getElementById('notification-' + binId);
            if (notificationToRemove) {
                notificationToRemove.remove();
            }
        }

        // Update bin levels every 5 seconds
        setInterval(updateBinLevels, 5000);

        // Initial update
        updateBinLevels();

        // Function to update bin levels and manage notifications
function updateBinLevels() {
    const binData = fetchBinData();
    const bins = document.querySelectorAll('.bin-level');
    bins.forEach((bin, index) => {
        const newLevel = binData[index];
        const fill = bin.querySelector('.bin-fill');
        const binId = 'bin' + (index + 1); // Unique identifier for each bin
        fill.style.height = `${newLevel}%`;

        // Change bin color to red if the level is above 75%
        if (newLevel >= 75) {
            fill.style.backgroundColor = '#f44336'; // Red color
            // Add a notification if it hasn't been notified
            if (!document.getElementById('notification-' + binId)) {
                addNotification(binId, `Recycle Bin ${index + 1} is ${newLevel.toFixed(0)}% full. Please empty it.`);
            }
        } else {
            fill.style.backgroundColor = '#4caf50'; // Original green color
            // If the level is below 75%, remove the notification
            removeNotification(binId);
        }

        // Record the time when the bin becomes full
        if (newLevel >= 75) {
            const currentTime = new Date().toLocaleString();
            const historyEntry = `Bin ${index + 1} became full at ${currentTime}`;
            updateBinHistory(binId, historyEntry);
        }
    });
}

// Function to update the bin history
function updateBinHistory(binId, entry) {
    const binHistoryContainer = document.getElementById('binHistory');
    const existingEntry = document.getElementById(`history-${binId}`);
    if (existingEntry) {
        existingEntry.textContent = entry; // Update existing entry
    } else {
        const newEntry = document.createElement('div');
        newEntry.id = `history-${binId}`;
        newEntry.textContent = entry;
        binHistoryContainer.appendChild(newEntry); // Add new entry
    }
}


    </script>
</body>
</html>
